{"ast":null,"code":"var _jsxFileName = \"/Users/leana/Documents/Documents/Capstone/capstoneapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currencies = [\"EUR\", \"USD\", \"COP\", \"MAD\", \"JPY\", \"AUD\"];\nfunction App() {\n  _s();\n  // State variables for the conversion\n  const [fromCurrency, setFromCurrency] = useState(currencies[0]);\n  const [toCurrency, setToCurrency] = useState(currencies[0]);\n  const [amount, setAmount] = useState(1);\n  const [convertedAmount, setConvertedAmount] = useState(0);\n  const [token, setToken] = useState(\"\");\n\n  // Asynchronous function that performs the conversion via API\n  async function convertCurrency() {\n    // Remember we need a valid token\n    if (token === \"\") {\n      alert(\"A valid API key/token is needed!\");\n      return;\n    }\n\n    // Prepare the request\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n      headers: {\n        apikey: token\n      }\n    };\n    const url = \"https://api.apilayer.com/exchangerates_data/convert?\";\n    const params = `to=${toCurrency}&from=${fromCurrency}&amount=${amount}`;\n\n    // Send the request and retrieve the data\n    const response = await fetch(url + params, requestOptions);\n    const data = await response.json();\n    setConvertedAmount(data.result);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Exchange Currencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This app makes use of the \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://apilayer.com/marketplace/exchangerates_data-api\",\n          children: \"Exchange Rates Data API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), \" \", \"at APILayer.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This API requieres an authentication token, so you must register (it's free) and get a token if you want to test it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"APILayer Token: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: token,\n        onChange: e => setToken(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"From: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: fromCurrency,\n        onChange: e => setFromCurrency(e.target.value),\n        children: currencies.map((cur, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cur,\n          children: cur\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"To: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: toCurrency,\n        onChange: e => setToCurrency(e.target.value),\n        children: currencies.map((cur, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cur,\n          children: cur\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Original amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-1\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: convertCurrency,\n        children: \"CONVERT!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Converted amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: convertedAmount,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BeGXleO/bF7cEWjwZEZ8DPJ9d9c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","Button","jsxDEV","_jsxDEV","currencies","App","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","convertedAmount","setConvertedAmount","token","setToken","convertCurrency","alert","requestOptions","method","redirect","headers","apikey","url","params","response","fetch","data","json","result","children","fileName","_jsxFileName","lineNumber","columnNumber","href","className","Label","Control","type","value","onChange","e","target","Select","map","cur","idx","onClick","readOnly","_c","$RefreshReg$"],"sources":["/Users/leana/Documents/Documents/Capstone/capstoneapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst currencies = [\"EUR\", \"USD\", \"COP\", \"MAD\", \"JPY\", \"AUD\"];\n\nfunction App() {\n  // State variables for the conversion\n  const [fromCurrency, setFromCurrency] = useState(currencies[0]);\n  const [toCurrency, setToCurrency] = useState(currencies[0]);\n  const [amount, setAmount] = useState(1);\n  const [convertedAmount, setConvertedAmount] = useState(0);\n  const [token, setToken] = useState(\"\");\n\n  // Asynchronous function that performs the conversion via API\n  async function convertCurrency() {\n    // Remember we need a valid token\n    if (token === \"\") {\n      alert(\"A valid API key/token is needed!\");\n      return;\n    }\n\n    // Prepare the request\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n      headers: {\n        apikey: token,\n      },\n    };\n    const url = \"https://api.apilayer.com/exchangerates_data/convert?\";\n    const params = `to=${toCurrency}&from=${fromCurrency}&amount=${amount}`;\n\n    // Send the request and retrieve the data\n    const response = await fetch(url + params, requestOptions);\n    const data = await response.json();\n    setConvertedAmount(data.result);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <h1>Exchange Currencies</h1>\n        <p>\n          This app makes use of\n          the <a href=\"https://apilayer.com/marketplace/exchangerates_data-api\">\n            Exchange Rates Data API\n          </a>{\" \"}\n          at APILayer.\n        </p>\n        <p>\n          This API requieres an authentication token, so you must register (it's\n          free) and get a token if you want to test it.\n        </p>\n      </Row>\n      <Row className=\"py-1\">\n        <Form.Label>APILayer Token: </Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={token}\n          onChange={(e) => setToken(e.target.value)}\n        />\n      </Row>\n      <Row className=\"py-1\">\n        <Form.Label>From: </Form.Label>\n        <Form.Select\n          value={fromCurrency}\n          onChange={(e) => setFromCurrency(e.target.value)}\n        >\n          {currencies.map((cur, idx) => (\n            <option key={idx} value={cur}>\n              {cur}\n            </option>\n          ))}\n        </Form.Select>\n      </Row>\n      <Row className=\"py-1\">\n        <Form.Label>To: </Form.Label>\n        <Form.Select\n          value={toCurrency}\n          onChange={(e) => setToCurrency(e.target.value)}\n        >\n          {currencies.map((cur, idx) => (\n            <option key={idx} value={cur}>\n              {cur}\n            </option>\n          ))}\n        </Form.Select>\n      </Row>\n      <Row className=\"py-1\">\n        <Form.Label>Original amount: </Form.Label>\n        <Form.Control\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </Row>\n      <Row className=\"py-1\">\n        <Button onClick={convertCurrency}>CONVERT!</Button>\n      </Row>\n      <Row className=\"py-1\">\n        <Form.Label>Converted amount: </Form.Label>\n        <Form.Control type=\"text\" value={convertedAmount} readOnly />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}